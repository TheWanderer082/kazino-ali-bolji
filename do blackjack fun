int do_blackjack()
{

    font.loadFromFile("piksel.ttf");

    RenderWindow window(VideoMode(1920, 1080), "Mrtvi UI", Style::Fullscreen);
    window.setFramerateLimit(60);

    txt_size = 9;
    sp_size = 4;


    bg.loadFromFile("sto.png");
    Sprite background;
    background = setsprite(0 , 0, 1.86 , 1.86);
    background.setTexture(bg);

    Texture tgreen_arrow ,tyellow_arrow;
    Sprite arrow;
    tyellow_arrow.loadFromFile("strelica2.png");
    tgreen_arrow.loadFromFile("strelica1.png");
    arrow = setsprite(10 , 0 , 5 , 5);
    arrow.setTexture(tyellow_arrow);
    FloatRect bounds_arrow  = arrow.getGlobalBounds();

    Texture tdeck;
    tdeck.loadFromFile("deck.png"); // napravio sliku za deck
    Sprite deck;
    deck = setsprite (1600 , 400, 4.5 , 4.5); // nacrtao deck

    deck.setTexture(tdeck);

    sum_of_cards = 0;
    pare = to_string(money);
    amount_cash = pare + " $";

    cash = settext(80 , 1680 , 20 , 5 ,Color::Yellow , Color::Black , amount_cash);
    cash.setFont(font);
    hit = settext(80 , 1680 , 700 , 5 ,Color::Yellow , Color::Black , "Hit");
    hit.setFont(font);
    stand = settext(80 , 1680 , 800 , 5 ,Color::Yellow , Color::Black , "Stand");
    stand.setFont(font);
    hbounds = hit.getGlobalBounds(); // ovde sam saznao da nema potrebe za pravljenjem pravougaonika
    sbounds = stand.getGlobalBounds();

    /*Texture base;
    base.loadFromFile("row-3-column-14.png");
    int xplayer = 100 , yplayer = 550 , xdealer , ydealer;
    Sprite testkarta;
    testkarta = setsprite(xplayer , yplayer , 4.5 , 4.5);
    testkarta.setTexture(base);
    Sprite testkarta1;
    testkarta1 = setsprite(100 , 130 , 4.5 , 4.5);
    testkarta1.setTexture(base);*/
    //ovo sam drkao da vidim gde je najbolji polozaj za karte


    start = true;

    while(window.isOpen())
    {

        Event esc;
      while(window.pollEvent(esc))
        {
            if(Keyboard::isKeyPressed(Keyboard::Escape))window.close();
        }

            if(start)
        {
        //ovde kao sta da se desi kad krene





            start = false;
        }


        Vector2f mis = window.mapPixelToCoords(Mouse::getPosition(window));
        if(bounds_arrow.contains(mis))arrow.setTexture(tgreen_arrow);
            else
            {
                arrow.setTexture(tyellow_arrow);
            }
        if(bounds_arrow.contains(mis) && Mouse::isButtonPressed(Mouse::Left))
        {

            window.close();

            return 1;
        }

        if(hbounds.contains(mis))hit.setFillColor(Color(60 , 105 , 60));
            else
            {
                hit.setFillColor(Color::Yellow);
            }
        if(sbounds.contains(mis))stand.setFillColor(Color(60 , 105 , 60));
            else
            {
                stand.setFillColor(Color::Yellow);
            }
        if(sbounds.contains(mis) && Mouse::isButtonPressed(Mouse::Left))
        {
            //ovde sta se desi kad kliknes stand


            x_karte = 800;
            while (dealer_zbir < 17){
                sp_for_draw[sp_size] = setsprite(x_karte, y_karte - 650, 5, 5);
                dealer_zbir = dealer_zbir + karte[order].vrednost;
                sp_for_draw[sp_size++].setTexture(karte[order--].pic);
                x_karte = x_karte + 100;

            }
            stand_has_been_hit = true;
            while (sbounds.contains(mis) && Mouse::isButtonPressed(Mouse::Left)){

            }
        }

        if(hbounds.contains(mis) && Mouse::isButtonPressed(Mouse::Left))
        {
            // a ovde sta se desi kad kliknes hit

            sp_for_draw[sp_size] = setsprite(x_karte, y_karte, 5, 5);
            sum_of_cards =sum_of_cards + karte[order].vrednost;
            sp_for_draw[sp_size++].setTexture(karte[order--].pic);
            x_karte = x_karte + 100;

            while(hbounds.contains(mis) && Mouse::isButtonPressed(Mouse::Left)){

            }
        }

        txt_sum_of_cards = settext(80, 700, 800, 5, Color::Yellow, Color::Black, to_string(sum_of_cards));
        txt_sum_of_cards.setFont(font);

        txt_sum_of_dealer = settext(80, 700, 150, 5, Color::Yellow, Color::Black, to_string(dealer_zbir));
        txt_sum_of_dealer.setFont(font);
        //stand = settext(80 , 1680 , 800 , 5 ,Color::Yellow , Color::Black , "Stand");


        pare = to_string(money);
        amount_cash = pare + " $";

        cash = settext(80 , 1680 , 20 , 5 ,Color::Yellow , Color::Black , amount_cash);
        cash.setFont(font);


        sp_for_draw[1] = background;
        sp_for_draw[2] = arrow;
        sp_for_draw[3] = deck;

        txt_for_draw[3] = hit;
        txt_for_draw[4] = stand;
        txt_for_draw[5] = cash;
        txt_for_draw[6] = txt_sum_of_cards;
        txt_for_draw[7] = txt_sum_of_dealer;


        if (sum_of_cards == 21){
            // idi na pobeda

            game_score = 1;
        }
        if (sum_of_cards > 21){
            // idi na gubitnika

            game_score = 2;
        }
        if (stand_has_been_hit){
            if (dealer_zbir == 21){
                // idi na gubitnika
                game_score = 2;
            }
            if (dealer_zbir > 21){
                // idi na pobedu
                game_score = 1;
                //cout << "radi?";
            }
            else if (dealer_zbir > sum_of_cards){
                // idi na gubitnika
                game_score = 2;
            }
            else if (sum_of_cards > dealer_zbir){
                // idi na pobedu
                game_score = 1;
            }
            else if (sum_of_cards == dealer_zbir){
                // idi na nereseno
                game_score = 0;
            }
            stand_has_been_hit = false;
        }

        if (game_score == 1){
            rezultat = "VICTORY";
            money = money + 10;
            //cout << money << " ";
            //cout << "dubz\n";
        }
        else if (game_score == 2){
            rezultat = "LOST";
            money = money - 10;
            //cout << money << "\n";
           // cout << "Ls\n";
        }
        else if (game_score == 0){
            rezultat = "DRAW";

        }
        //cout << money << " ";
        game_rez = settext(100, 700, 450, 5, Color::Yellow, Color::Black, rezultat);
        game_rez.setFont(font);

        txt_for_draw[8] = game_rez;



        //cout << sum_of_cards << "\n";
        window.clear();
        //cout << "works2";
        for (int i = 1; i < sp_size; i++){
            window.draw(sp_for_draw[i]);
        }
        for (int i = 3; i < txt_size; i++){
            window.draw(txt_for_draw[i]);
        }

        window.display();

        if (rezultat != ""){
            Sleep(1500);
            return 82;
        }



        //cout << "works3";
    }


    return 0;
}
